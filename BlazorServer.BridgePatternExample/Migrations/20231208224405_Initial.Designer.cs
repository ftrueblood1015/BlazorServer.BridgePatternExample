// <auto-generated />
using System;
using BlazorServer.BridgePatternExample.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorServer.BridgePatternExample.Migrations
{
    [DbContext(typeof(BridgePatternContext))]
    [Migration("20231208224405_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.25");

            modelBuilder.Entity("BlazorServer.BridgePatternExample.Domain.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BaseCost")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardRarityId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardTypeId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ColorIdentityId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ConvertedManaCost")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Set")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CardRarityId");

                    b.HasIndex("CardTypeId");

                    b.HasIndex("ColorIdentityId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("BlazorServer.BridgePatternExample.Domain.Models.CardRarity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CardRarities");
                });

            modelBuilder.Entity("BlazorServer.BridgePatternExample.Domain.Models.CardType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CardTypes");
                });

            modelBuilder.Entity("BlazorServer.BridgePatternExample.Domain.Models.ColorIdentity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ColorIdentities");
                });

            modelBuilder.Entity("BlazorServer.BridgePatternExample.Domain.Models.Condition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Conditions");
                });

            modelBuilder.Entity("BlazorServer.BridgePatternExample.Domain.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ConditionId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TotalCost")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("ConditionId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BlazorServer.BridgePatternExample.Domain.Models.PremiumOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ConditionId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PricePremium")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TotalCost")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("ConditionId");

                    b.ToTable("PremiumOrders");
                });

            modelBuilder.Entity("BlazorServer.BridgePatternExample.Domain.Models.Card", b =>
                {
                    b.HasOne("BlazorServer.BridgePatternExample.Domain.Models.CardRarity", "CardRarity")
                        .WithMany()
                        .HasForeignKey("CardRarityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorServer.BridgePatternExample.Domain.Models.CardType", "CardType")
                        .WithMany()
                        .HasForeignKey("CardTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorServer.BridgePatternExample.Domain.Models.ColorIdentity", "ColorIdentity")
                        .WithMany()
                        .HasForeignKey("ColorIdentityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardRarity");

                    b.Navigation("CardType");

                    b.Navigation("ColorIdentity");
                });

            modelBuilder.Entity("BlazorServer.BridgePatternExample.Domain.Models.Order", b =>
                {
                    b.HasOne("BlazorServer.BridgePatternExample.Domain.Models.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorServer.BridgePatternExample.Domain.Models.Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("ConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Condition");
                });

            modelBuilder.Entity("BlazorServer.BridgePatternExample.Domain.Models.PremiumOrder", b =>
                {
                    b.HasOne("BlazorServer.BridgePatternExample.Domain.Models.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorServer.BridgePatternExample.Domain.Models.Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("ConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Condition");
                });
#pragma warning restore 612, 618
        }
    }
}
